#!/usr/bin/env python

# Usage: Extract the pl_poke_data.narc file and height.narc file from your
# existing Platinum ROM using a tool such as Tinke, then run this script to
# extract its assets into your pokeplatinum project's folder structure:
#
#   python unpack_sprite_data.py

import json
import pathlib
import subprocess


KNARC = pathlib.Path('build/subprojects/knarc/knarc')

MON_DIRS = [
    '000',
    'bulbasaur',
    'ivysaur',
    'venusaur',
    'charmander',
    'charmeleon',
    'charizard',
    'squirtle',
    'wartortle',
    'blastoise',
    'caterpie',
    'metapod',
    'butterfree',
    'weedle',
    'kakuna',
    'beedrill',
    'pidgey',
    'pidgeotto',
    'pidgeot',
    'rattata',
    'raticate',
    'spearow',
    'fearow',
    'ekans',
    'arbok',
    'pikachu',
    'raichu',
    'sandshrew',
    'sandslash',
    'nidoran_f',
    'nidorina',
    'nidoqueen',
    'nidoran_m',
    'nidorino',
    'nidoking',
    'clefairy',
    'clefable',
    'vulpix',
    'ninetales',
    'jigglypuff',
    'wigglytuff',
    'zubat',
    'golbat',
    'oddish',
    'gloom',
    'vileplume',
    'paras',
    'parasect',
    'venonat',
    'venomoth',
    'diglett',
    'dugtrio',
    'meowth',
    'persian',
    'psyduck',
    'golduck',
    'mankey',
    'primeape',
    'growlithe',
    'arcanine',
    'poliwag',
    'poliwhirl',
    'poliwrath',
    'abra',
    'kadabra',
    'alakazam',
    'machop',
    'machoke',
    'machamp',
    'bellsprout',
    'weepinbell',
    'victreebel',
    'tentacool',
    'tentacruel',
    'geodude',
    'graveler',
    'golem',
    'ponyta',
    'rapidash',
    'slowpoke',
    'slowbro',
    'magnemite',
    'magneton',
    'farfetchd',
    'doduo',
    'dodrio',
    'seel',
    'dewgong',
    'grimer',
    'muk',
    'shellder',
    'cloyster',
    'gastly',
    'haunter',
    'gengar',
    'onix',
    'drowzee',
    'hypno',
    'krabby',
    'kingler',
    'voltorb',
    'electrode',
    'exeggcute',
    'exeggutor',
    'cubone',
    'marowak',
    'hitmonlee',
    'hitmonchan',
    'lickitung',
    'koffing',
    'weezing',
    'rhyhorn',
    'rhydon',
    'chansey',
    'tangela',
    'kangaskhan',
    'horsea',
    'seadra',
    'goldeen',
    'seaking',
    'staryu',
    'starmie',
    'mr_mime',
    'scyther',
    'jynx',
    'electabuzz',
    'magmar',
    'pinsir',
    'tauros',
    'magikarp',
    'gyarados',
    'lapras',
    'ditto',
    'eevee',
    'vaporeon',
    'jolteon',
    'flareon',
    'porygon',
    'omanyte',
    'omastar',
    'kabuto',
    'kabutops',
    'aerodactyl',
    'snorlax',
    'articuno',
    'zapdos',
    'moltres',
    'dratini',
    'dragonair',
    'dragonite',
    'mewtwo',
    'mew',
    'chikorita',
    'bayleef',
    'meganium',
    'cyndaquil',
    'quilava',
    'typhlosion',
    'totodile',
    'croconaw',
    'feraligatr',
    'sentret',
    'furret',
    'hoothoot',
    'noctowl',
    'ledyba',
    'ledian',
    'spinarak',
    'ariados',
    'crobat',
    'chinchou',
    'lanturn',
    'pichu',
    'cleffa',
    'igglybuff',
    'togepi',
    'togetic',
    'natu',
    'xatu',
    'mareep',
    'flaaffy',
    'ampharos',
    'bellossom',
    'marill',
    'azumarill',
    'sudowoodo',
    'politoed',
    'hoppip',
    'skiploom',
    'jumpluff',
    'aipom',
    'sunkern',
    'sunflora',
    'yanma',
    'wooper',
    'quagsire',
    'espeon',
    'umbreon',
    'murkrow',
    'slowking',
    'misdreavus',
    'unown',
    'wobbuffet',
    'girafarig',
    'pineco',
    'forretress',
    'dunsparce',
    'gligar',
    'steelix',
    'snubbull',
    'granbull',
    'qwilfish',
    'scizor',
    'shuckle',
    'heracross',
    'sneasel',
    'teddiursa',
    'ursaring',
    'slugma',
    'magcargo',
    'swinub',
    'piloswine',
    'corsola',
    'remoraid',
    'octillery',
    'delibird',
    'mantine',
    'skarmory',
    'houndour',
    'houndoom',
    'kingdra',
    'phanpy',
    'donphan',
    'porygon2',
    'stantler',
    'smeargle',
    'tyrogue',
    'hitmontop',
    'smoochum',
    'elekid',
    'magby',
    'miltank',
    'blissey',
    'raikou',
    'entei',
    'suicune',
    'larvitar',
    'pupitar',
    'tyranitar',
    'lugia',
    'ho_oh',
    'celebi',
    'treecko',
    'grovyle',
    'sceptile',
    'torchic',
    'combusken',
    'blaziken',
    'mudkip',
    'marshtomp',
    'swampert',
    'poochyena',
    'mightyena',
    'zigzagoon',
    'linoone',
    'wurmple',
    'silcoon',
    'beautifly',
    'cascoon',
    'dustox',
    'lotad',
    'lombre',
    'ludicolo',
    'seedot',
    'nuzleaf',
    'shiftry',
    'taillow',
    'swellow',
    'wingull',
    'pelipper',
    'ralts',
    'kirlia',
    'gardevoir',
    'surskit',
    'masquerain',
    'shroomish',
    'breloom',
    'slakoth',
    'vigoroth',
    'slaking',
    'nincada',
    'ninjask',
    'shedinja',
    'whismur',
    'loudred',
    'exploud',
    'makuhita',
    'hariyama',
    'azurill',
    'nosepass',
    'skitty',
    'delcatty',
    'sableye',
    'mawile',
    'aron',
    'lairon',
    'aggron',
    'meditite',
    'medicham',
    'electrike',
    'manectric',
    'plusle',
    'minun',
    'volbeat',
    'illumise',
    'roselia',
    'gulpin',
    'swalot',
    'carvanha',
    'sharpedo',
    'wailmer',
    'wailord',
    'numel',
    'camerupt',
    'torkoal',
    'spoink',
    'grumpig',
    'spinda',
    'trapinch',
    'vibrava',
    'flygon',
    'cacnea',
    'cacturne',
    'swablu',
    'altaria',
    'zangoose',
    'seviper',
    'lunatone',
    'solrock',
    'barboach',
    'whiscash',
    'corphish',
    'crawdaunt',
    'baltoy',
    'claydol',
    'lileep',
    'cradily',
    'anorith',
    'armaldo',
    'feebas',
    'milotic',
    'castform',
    'kecleon',
    'shuppet',
    'banette',
    'duskull',
    'dusclops',
    'tropius',
    'chimecho',
    'absol',
    'wynaut',
    'snorunt',
    'glalie',
    'spheal',
    'sealeo',
    'walrein',
    'clamperl',
    'huntail',
    'gorebyss',
    'relicanth',
    'luvdisc',
    'bagon',
    'shelgon',
    'salamence',
    'beldum',
    'metang',
    'metagross',
    'regirock',
    'regice',
    'registeel',
    'latias',
    'latios',
    'kyogre',
    'groudon',
    'rayquaza',
    'jirachi',
    'deoxys',
    'turtwig',
    'grotle',
    'torterra',
    'chimchar',
    'monferno',
    'infernape',
    'piplup',
    'prinplup',
    'empoleon',
    'starly',
    'staravia',
    'staraptor',
    'bidoof',
    'bibarel',
    'kricketot',
    'kricketune',
    'shinx',
    'luxio',
    'luxray',
    'budew',
    'roserade',
    'cranidos',
    'rampardos',
    'shieldon',
    'bastiodon',
    'burmy',
    'wormadam',
    'mothim',
    'combee',
    'vespiquen',
    'pachirisu',
    'buizel',
    'floatzel',
    'cherubi',
    'cherrim',
    'shellos',
    'gastrodon',
    'ambipom',
    'drifloon',
    'drifblim',
    'buneary',
    'lopunny',
    'mismagius',
    'honchkrow',
    'glameow',
    'purugly',
    'chingling',
    'stunky',
    'skuntank',
    'bronzor',
    'bronzong',
    'bonsly',
    'mime_jr',
    'happiny',
    'chatot',
    'spiritomb',
    'gible',
    'gabite',
    'garchomp',
    'munchlax',
    'riolu',
    'lucario',
    'hippopotas',
    'hippowdon',
    'skorupi',
    'drapion',
    'croagunk',
    'toxicroak',
    'carnivine',
    'finneon',
    'lumineon',
    'mantyke',
    'snover',
    'abomasnow',
    'weavile',
    'magnezone',
    'lickilicky',
    'rhyperior',
    'tangrowth',
    'electivire',
    'magmortar',
    'togekiss',
    'yanmega',
    'leafeon',
    'glaceon',
    'gliscor',
    'mamoswine',
    'porygon_z',
    'gallade',
    'probopass',
    'dusknoir',
    'froslass',
    'rotom',
    'uxie',
    'mesprit',
    'azelf',
    'dialga',
    'palkia',
    'heatran',
    'regigigas',
    'giratina',
    'cresselia',
    'phione',
    'manaphy',
    'darkrai',
    'shaymin',
    'arceus',
]

SHADOW_SIZES = [
    "SHADOW_SIZE_NONE",
    "SHADOW_SIZE_SMALL",
    "SHADOW_SIZE_MEDIUM",
    "SHADOW_SIZE_LARGE",
]


def parse_sint(b: int | bytes):
    i = int(b)
    return i - 256 if i >= 128 else i


def parse_frames(bin: bytes):
    frames = []
    for i in range(10):
        idx = i * 4
        frames.append({
            'sprite_frame': parse_sint(bin[idx]),
            'frame_delay': parse_sint(bin[idx+1]),
            'x_shift': parse_sint(bin[idx+2]),
            'y_shift': parse_sint(bin[idx+3]),
        })
    return frames


pl_poke_data_narc = pathlib.Path('pl_poke_data.narc')
if not pl_poke_data_narc.exists():
    raise IOError('pl_poke_data.narc not found in current working directory')

height_narc = pathlib.Path('height.narc')
if not height_narc.exists():
    raise IOError('height.narc not found in current working directory')

working_dir = pathlib.Path('work')
working_dir.mkdir(parents=True, exist_ok=True)
subprocess.run([
    KNARC,
    '-d', working_dir,
    '-u', pl_poke_data_narc,
])
subprocess.run([
    KNARC,
    '-d', working_dir,
    '-u', height_narc,
])

res_pokemon_root = pathlib.Path('res/pokemon')

pl_poke_data_bin = open(working_dir / 'pl_poke_data_00000000.bin', 'rb').read()
for i in range(493):
    j = i * 4

    height_back_female = open(working_dir / f'height_{j:08}.bin', 'rb').read()
    height_back_male = open(working_dir / f'height_{j+1:08}.bin', 'rb').read()
    height_front_female = open(working_dir / f'height_{j+2:08}.bin', 'rb').read()
    height_front_male = open(working_dir / f'height_{j+3:08}.bin', 'rb').read()

    with open(res_pokemon_root / MON_DIRS[i] / 'sprite_data.json', 'r') as f:
        sprite_data_json = json.load(f)

    sprite_data_json['back']['y_offset']['female'] = int.from_bytes(height_back_female, byteorder='little')
    sprite_data_json['back']['y_offset']['male'] = int.from_bytes(height_back_male, byteorder='little')
    sprite_data_json['front']['y_offset']['female'] = int.from_bytes(height_front_female, byteorder='little')
    sprite_data_json['front']['y_offset']['male'] = int.from_bytes(height_front_male, byteorder='little')

    idx = i * 89
    sprite_data_json['front']['cry_delay'] = parse_sint(pl_poke_data_bin[idx])
    sprite_data_json['front']['animation'] = pl_poke_data_bin[idx+1]
    sprite_data_json['front']['start_delay'] = parse_sint(pl_poke_data_bin[idx+2])
    sprite_data_json['front']['frames'] = parse_frames(pl_poke_data_bin[idx+3:idx+43])
    sprite_data_json['back']['cry_delay'] = parse_sint(pl_poke_data_bin[idx+43])
    sprite_data_json['back']['animation'] = pl_poke_data_bin[idx+44]
    sprite_data_json['back']['start_delay'] = parse_sint(pl_poke_data_bin[idx+45])
    sprite_data_json['back']['frames'] = parse_frames(pl_poke_data_bin[idx+46:idx+86])
    sprite_data_json['front']['addl_y_offset'] = parse_sint(pl_poke_data_bin[idx+86])
    sprite_data_json['shadow']['x_offset'] = parse_sint(pl_poke_data_bin[idx+87])
    sprite_data_json['shadow']['size'] = SHADOW_SIZES[int(pl_poke_data_bin[idx+88])]


    with open(res_pokemon_root / MON_DIRS[i] / 'sprite_data.json', 'w') as f:
        json.dump(sprite_data_json, f, indent=4)